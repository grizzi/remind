services:
  django:
    build: ./backend
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    restart: on-failure
    develop:
      watch:
        - action: rebuild
          path: ./backend/pyproject.toml
    ports:
      - 8000:8000
    env_file:
      - .env.dev
    depends_on:
      - postgres
    volumes:
      - ./backend/backend:/srv/app/backend
      - ./backend/api:/srv/app/api

  celery:
    build: ./backend
    container_name: celery
    entrypoint: ''
    command: celery -A backend worker --beat --scheduler django --loglevel=info
    restart: on-failure
    develop:
      watch:
        - action: rebuild
          path: ./backend/pyproject.toml
    env_file:
      - .env.dev
    depends_on:
      - django
    volumes:
      - ./backend/backend:/srv/app/backend
      - ./backend/api:/srv/app/api

  postgres:
    image: postgres:16.1-alpine
    container_name: db
    ports:
      - 5432:5432
    env_file: .env.dev

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - 6379:6379

  frontend:
    build: ./frontend
    container_name: frontend
    command: npm run dev -- --host # expose the port to the host
    develop:
      watch:
        - action: rebuild
          path: package.json
    ports:
      - 3000:3000
      - 5173:5173
    volumes:
      - ./frontend/src:/srv/app/src

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - 8025:8025
      - 1025:1025
